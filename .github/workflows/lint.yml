name: Lint
on: push
jobs:
  makefile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dry run with GNU Make
      run: make --dry-run --always-make download lint format test build
  dart:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['dart/nm_delta', 'dart/nm_delta_notus']
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'dev'
        flutter-version: '1.26.0-1.0.pre'
    - working-directory: ${{ matrix.package }}
      run: dart pub get
    - working-directory: ${{ matrix.package }}
      run: dart analyze
  flutter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ 'flutter/nm_app' ]
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: 'dev'
        flutter-version: '1.26.0-1.0.pre'
    - run: flutter config --enable-web
    - working-directory: ${{ matrix.package }}
      run: flutter pub get
      # TODO: re-enable this check
      #working-directory: ${{ matrix.package }}
      #run: flutter analyze
  go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.15.2' # The Go version to download (if necessary) and use.
    - run: go version
    - run: go vet ./cmd/... ./note/...
